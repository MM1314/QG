@model SOA.WLIMS.Service.DAL.Order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Order</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code)
            @Html.ValidationMessageFor(model => model.Code)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SrcUserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SrcUserName)
            @Html.ValidationMessageFor(model => model.SrcUserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SrcUserPhone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SrcUserPhone)
            @Html.ValidationMessageFor(model => model.SrcUserPhone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SrcAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SrcAddress)
            @Html.ValidationMessageFor(model => model.SrcAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Contents)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contents)
            @Html.ValidationMessageFor(model => model.Contents)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContentsWeight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContentsWeight)
            @Html.ValidationMessageFor(model => model.ContentsWeight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContentsValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContentsValue)
            @Html.ValidationMessageFor(model => model.ContentsValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ToUserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ToUserName)
            @Html.ValidationMessageFor(model => model.ToUserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ToUserPhone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ToUserPhone)
            @Html.ValidationMessageFor(model => model.ToUserPhone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ToAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ToAddress)
            @Html.ValidationMessageFor(model => model.ToAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Charges)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Charges)
            @Html.ValidationMessageFor(model => model.Charges)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PickupTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PickupTime)
            @Html.ValidationMessageFor(model => model.PickupTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SigninTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SigninTime)
            @Html.ValidationMessageFor(model => model.SigninTime)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

